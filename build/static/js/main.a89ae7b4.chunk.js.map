{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/minigraph.js","components/home.js","components/navbar.js","components/faq.js","components/banner.js","components/deepdive.js","App.js","serviceWorker.js","index.js"],"names":["months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","validateCTS","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","Fragment","className","style","display","reveal","total","colSpan","title","isNaN","parse","lastupdatedtime","formatDistance","onClick","e","column","setItem","handleSort","window","innerWidth","district","toLowerCase","map","index","onMouseEnter","onHighlightDistrict","onMouseLeave","touchstart","fontWeight","color","delta","Unknown","Table","states","setStates","revealedStates","setRevealedStates","setCount","summary","reduce","a","length","s","stateDistrictWiseData","handleReveal","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","to","statecode","districtData","onHighlightState","Level","setData","setdistrictIndex","setConfirmed","setActive","setRecoveries","setDeaths","setDeltas","active","recoveries","deaths","deltas","districtIndex","findIndex","p","recovered","deltaconfirmed","deltadeaths","deltarecovered","parseData","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","target","parentNode","appendChild","text","value","parseFloat","toFixed","toString","toTitleCase","str","split","i","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","regionHighlighted","setSelectedRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","region","getRegionFromState","useMemo","currentMapData","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","moving","setMoving","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","margin","chartRight","chartBottom","ts","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","preprocessTimeseries","T","svg1","svg2","svg3","svg4","svg5","svg6","dateMin","setDate","getDate","dateMax","xScale","range","xAxis","g","ticks","yAxis","yScale","tickPadding","svgArray","colors","totalCharts","Set","uniformScaleMin","type","min","yScaleUniformLinear","clamp","nice","yScaleUniformLog","max","yScaleDailyUniform","yScales","has","yScaleLinear","yScaleLog","focus","mousemove","xm","this","invert","bisectDate","left","f","j","mouseout","t","transition","duration","empty","reverse","node","getTotalLength","getPointAtLength","x","y","repeat","curve","yesterdayDate","lastDate","isYesterday","getMonth","marginTop","textAlign","aria-label","Minigraph","y1","path1","datum","totalLength1","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","activityLog","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","updateLogResponse","statewise","key_values","cases_time_series","htmlFor","checked","onChange","event","disabled","format","activity","timestamp","update","Navbar","navLinkProps","location","pathname","pages","pageLink","animationDelayForNavbar","displayName","alt","src","FAQ","faq","setFaq","getFAQs","scrollTo","then","catch","error","question","dangerouslySetInnerHTML","__html","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","random","snippetChooser","interval","setInterval","clearInterval","banner","DeepDive","history","require","createBrowserHistory","App","view","render","exact","page","component","href","rel","justifyContent","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"uVAAMA,EAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,OA+CKC,EAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,WAGWC,EAAqB,SAACN,GACjC,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUD,EAAV,YAAiBH,EAAOK,GAAxB,aAAmCE,EAAKH,MAAM,EAAG,GAAjD,SAGWK,EAAc,WAAgB,IAAfC,EAAc,uDAAP,GAC3BC,EAAQ,IAAIC,KAClBD,EAAME,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMC,EAAY,CAChB,iBACA,gBACA,iBACA,iBACA,gBACA,kBAEF,OAAOJ,EACJK,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQF,EAAEE,OAAQF,EAAEG,QAClDJ,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQE,OAAOJ,EAAEE,KAAQ,QACvDH,QAAO,SAACC,GACP,IAAMV,EAAOK,EAAMU,cACnB,OAAO,IAAIT,KAAKI,EAAEG,KAAOb,GAAQK,M,6BCgKxBW,MApPf,SAAaC,GAAQ,IAAD,EACQC,mBAASD,EAAME,OADvB,mBACXA,EADW,KACJC,EADI,OAEgBF,mBAASD,EAAMI,WAF/B,mBAEXA,EAFW,KAEAC,EAFA,OAG4BJ,mBAASD,EAAMI,WAH3C,mBAGXE,EAHW,KAGMC,EAHN,OAIcN,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,uBAC7BD,aAAaC,QAAQ,uBACrB,YACJC,cAAaF,aAAaC,QAAQ,yBACmB,SAAjDD,aAAaC,QAAQ,0BATT,mBAIXE,EAJW,KAIDC,EAJC,KAalBC,qBAAU,WACRX,EAASH,EAAME,SACd,CAACF,EAAME,QAEVY,qBAAU,WACRT,EAAaL,EAAMI,WACnBG,EAAmBP,EAAMI,aACxB,CAACJ,EAAMI,YAEV,IAIMW,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAS,GACXD,IACFE,OAAOC,KAAKH,GACTI,MAAK,SAACC,EAAWC,GAChB,IAAMf,EAAaI,EAASJ,WACtBgB,EACW,aAAfhB,EACIc,EACAG,SAASR,EAAWK,GAAWI,WAC/BC,EACW,aAAfnB,EACIe,EACAE,SAASR,EAAWM,GAAWG,WAC/BE,EACJJ,EAASG,GAELH,IAAWG,GAAUL,EAAYC,EADjC,GAGC,EACP,OAAOX,EAASD,YACZiB,GACmB,EAAnBA,KAELC,SAAQ,SAACC,GACRZ,EAAOY,GAAOb,EAAWa,MAE7BvB,EAAmBW,MAGvB,CAACN,EAASD,YAAaC,EAASJ,aAoBlC,OAJAM,qBAAU,WACRC,EAAcX,KACb,CAACA,EAAWQ,EAAUG,IAGvB,kBAAC,IAAMgB,SAAP,KAGE,wBACEC,UAAW,oBACXC,MAAO,CAACC,QAASlC,EAAMmC,SAAWnC,EAAMoC,MAAQ,GAAK,SAErD,wBAAIC,QAAS,GACX,yBAAKL,UAAU,eACb,gDACA,wBACEM,MACEC,MAAMlD,KAAKmD,MAAM9D,EAAWsB,EAAME,MAAMuC,mBACpC,GACAxD,EAAmBe,EAAME,MAAMuC,kBAGpCF,MAAMlD,KAAKmD,MAAM9D,EAAWsB,EAAME,MAAMuC,mBACrC,GADH,UAEMC,YACD,IAAIrD,KAAKX,EAAWsB,EAAME,MAAMuC,kBAChC,IAAIpD,MAJT,YAWT,wBACE2C,UAAS,2BAET,wBAAIA,UAAU,UACZ,yBAAKA,UAAU,mBACb,0BAAMM,MAAM,YAAZ,YACA,yBACEL,MAAO,CACLC,QAC0B,aAAxBtB,EAASJ,WAA4B,UAAY,SAGpDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASW,QAAS,SAACC,GAAD,OAlEnB,SAACC,GAClB,IAAMlC,EACJC,EAASJ,aAAeqC,GACnBjC,EAASD,YACc,aAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYqC,EACZlC,YAAaA,IAEfF,aAAaqC,QAAQ,sBAAuBD,GAC5CpC,aAAaqC,QAAQ,uBAAwBnC,GAwDFoC,CAAW,eAChD,yBAAKf,UAAU,mBACb,0BACEA,UAAS,UAAKgB,OAAOC,YAAc,IAAM,YAAc,IACvDX,MAAM,aAELU,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEhB,MAAO,CACLC,QAC0B,cAAxBtB,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,UACZ,yBAAKA,UAAU,mBACb,0BAAMM,MAAM,YAAZ,YAGJ,wBAAIN,UAAU,UACZ,yBAAKA,UAAU,mBACb,0BAAMM,MAAM,YAAZ,eAGJ,wBAAIN,UAAU,UACZ,yBAAKA,UAAU,mBACb,0BAAMM,MAAM,YAAZ,eAKLhC,GACCa,OAAOC,KAAKd,GACTd,QAAO,SAAC0D,GAAD,MAAyC,YAA3BA,EAASC,iBAC9BC,KAAI,SAACF,EAAUG,GACd,MAA+B,YAA3BH,EAASC,cAET,wBACErB,IAAKuB,EACLrB,UAAS,WAKTsB,aAAc,kCACZtD,EAAMuD,2BADM,aACZ,OAAAvD,EAA4BkD,EAAUhD,EAAOF,EAAMqD,QAErDG,aAAc,kCAAMxD,EAAMuD,2BAAZ,aAAM,OAAAvD,IACpByD,WAAY,kCACVzD,EAAMuD,2BADI,aACV,OAAAvD,EAA4BkD,EAAUhD,EAAOF,EAAMqD,SAGrD,wBAAIpB,MAAO,CAACyB,WAAY,MAAOR,GAC/B,4BACE,0BAAMlB,UAAU,SAASC,MAAO,CAAC0B,MAAO,YACrCrD,EAAgB4C,GAAUU,MAAMlC,UAAY,GAC3C,kBAAC,IAAD,MAEDpB,EAAgB4C,GAAUU,MAAMlC,UAAY,EAA5C,UACMpB,EAAgB4C,GAAUU,MAAMlC,WACnC,IAEN,0BAAMM,UAAU,qBACb1B,EAAgB4C,GAAUxB,aAM9B,SAGG,OAAfpB,QAAe,IAAfA,OAAA,EAAAA,EAAiBuD,UAChB,wBACE7B,UAAS,WACTC,MAAO,CAACC,QAASlC,EAAMmC,SAAWnC,EAAMoC,MAAQ,GAAK,SAErD,wBAAIH,MAAO,CAACyB,WAAY,MAAxB,WACA,4BACE,0BAAM1B,UAAU,SAASC,MAAO,CAAC0B,MAAO,YACrCrD,EAAe,QAAYsD,MAAMlC,UAAY,GAC5C,kBAAC,IAAD,MAEDpB,EAAe,QAAYsD,MAAMlC,UAAY,EAA7C,UACMpB,EAAe,QAAYsD,MAAMlC,WACpC,IAEN,0BAAMM,UAAU,qBACb1B,EAAe,QAAYoB,aAMpC,wBACEM,UAAS,SACTC,MAAO,CAACC,QAASlC,EAAMmC,SAAWnC,EAAMoC,MAAQ,GAAK,SAErD,6BACA,6BACA,gCC6BO0B,MA5Qf,SAAe9D,GAAQ,IAAD,EACQC,mBAASD,EAAM+D,QADvB,mBACbA,EADa,KACLC,EADK,OAEwB/D,mBAAS,IAFjC,mBAEbgE,EAFa,KAEGC,EAFH,OAGcjE,mBAAS,IAHvB,mBAGbG,EAHa,KAGFC,EAHE,OAIMJ,mBAAS,GAJf,mBAINkE,GAJM,aAKYlE,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,oBACrB,YACJC,cAAaF,aAAaC,QAAQ,sBACgB,SAA9CD,aAAaC,QAAQ,uBAVP,mBAKbE,EALa,UAcpBE,qBAAU,YACc,IAAlBd,EAAMoE,QACRJ,EAAUhE,EAAM+D,OAAOlF,MAAM,EAAG,IAEhCmF,EAAUhE,EAAM+D,UAEjB,CAAC/D,EAAM+D,OAAQ/D,EAAMoE,UAExBtD,qBAAU,WACJd,EAAM+D,OAAO,IACfG,EACElE,EAAM+D,OAAOM,QAAO,SAACC,EAAGpE,GACtB,OAAO,eAAIoE,EAAX,eAAepE,EAAMA,OAAQ,MAC5B,OAGN,CAACF,EAAM+D,SAEVjD,qBAAU,WACJiD,EAAOQ,OAAS,GAElBJ,EAASJ,EAAOlF,MAAM,GAAGW,QAAO,SAACgF,GAAD,OAAOA,GAAKA,EAAE9C,UAAY,KAAG6C,UAE9D,CAACR,IAEJjD,qBAAU,WACRT,EAAaL,EAAMyE,yBAClB,CAACzE,EAAMyE,wBAEV,IA8CMC,EAAe,SAACxE,GACpBgE,EAAkB,eACbD,EADY,eAEd/D,GAAS+D,EAAe/D,OAK7B,OAtDe,SAAC0C,EAAG5C,GACjB,IAAM2E,EAAWZ,EAAOa,OAAO,EAAG,GAClCb,EAAO1C,MAAK,SAACwD,EAAYC,GACvB,IAAMtE,EAAaI,EAASJ,WACxBgB,EAASqD,EAAWrE,GACpBmB,EAASmD,EAAWtE,GAOxB,MALmB,UAAfA,IACFgB,EAASC,SAASoD,EAAWrE,IAC7BmB,EAASF,SAASqD,EAAWtE,KAG3BI,EAASD,YACJa,EAASG,GAEZH,IAAWG,GAAUkD,EAAU,MAAYC,EAAU,MADrD,GAGC,EAEEtD,EAASG,GAEZH,IAAWG,GAAUkD,EAAU,MAAYC,EAAU,MADrD,GAGC,KAGTf,EAAOgB,QAAQJ,EAAS,IA2B1BK,GAEE,kBAAC,IAAMjD,SAAP,KACE,wBAAIC,UAAU,2BAA2BC,MAAO,CAACgD,eAAgB,SAAjE,qCACoC,kBAAC,IAAD,CAAMC,GAAG,QAAT,cAEpC,2BAAOlD,UAAU,iBAAiBC,MAAO,CAACgD,eAAgB,SAuIxD,+BAEElB,EAAOX,KAAI,SAAClD,EAAOmD,GAEjB,OAAc,IAAVA,GAAiC,OAAlBnD,EAAMiF,WAAoBjF,EAAMwB,UAAY,EAE3D,kBAAC,EAAD,CACEI,IAAKuB,EACLA,MAAOA,EACPnD,MAAOA,EACPkC,OAAO,EACPD,OAAQ8B,EAAe/D,EAAMA,OAC7BE,UACEF,EAAMA,SAASE,EACXA,EAAUF,EAAMA,OAAOkF,aACvB,GAENC,iBAAkBrF,EAAMqF,iBACxB9B,oBAAqBvD,EAAMuD,oBAC3BmB,aAAcA,IAIb,YC/JJY,MAxGf,SAAetF,GAAQ,IAAD,EACIC,mBAASD,EAAMb,MADnB,mBACbA,EADa,KACPoG,EADO,OAEsBtF,mBAAS,GAF/B,mBAEEuF,GAFF,aAGcvF,mBAAS,GAHvB,mBAGFwF,GAHE,aAIQxF,mBAAS,GAJjB,mBAILyF,GAJK,aAKgBzF,mBAAS,GALzB,mBAKD0F,GALC,aAMQ1F,mBAAS,GANjB,mBAML2F,GANK,aAOQ3F,mBAAS,GAPjB,mBAOL4F,GAPK,WA4CpB,OAnCA/E,qBAAU,WACRyE,EAAQvF,EAAMb,QACb,CAACa,EAAMb,OAEV2B,qBAAU,YACU,WAChB,IAAIY,EAAY,EACZoE,EAAS,EACTC,EAAa,EACbC,EAAS,EACTC,EAAS,GACPC,EAAgBzE,SAAStC,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cACrDhG,EAAK0C,SAAQ,SAAC3B,EAAOmD,GACL,IAAVA,GACF3B,GAAaD,SAASvB,EAAMwB,WAC5BoE,GAAUrE,SAASvB,EAAM4F,QACzBC,GAActE,SAASvB,EAAMmG,WAC7BL,GAAUvE,SAASvB,EAAM8F,SAEzBC,EAAS,CACPvE,UAAWD,SAASvB,EAAMoG,gBAC1BN,OAAQvE,SAASvB,EAAMqG,aACvBF,UAAW5E,SAASvB,EAAMsG,oBAIhCf,EAAa/D,GACbgE,EAAUI,GACVH,EAAcI,GACdH,EAAUI,GACVH,EAAUI,GACVT,EAAiBU,GAEnBO,KACC,CAACtH,IAEF,yBAAK6C,UAAU,SACb,yBACEA,UAAU,gCACVC,MAAO,CAACgD,eAAgB,OAExB,yCACA,gCAEGjF,EAAMb,MAAQa,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAC5CnF,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBmB,gBAAkB,EACtE,IAAMtG,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBmB,eAC5D,KACF,GANN,KASA,4BAAKtG,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBzD,UAA3D,MAGF,yBACEM,UAAU,8BACVC,MAAO,CAACgD,eAAgB,SAExB,wBAAIjD,UAAU,WAAd,UACA,oCAEA,wBAAIA,UAAU,uBAAuBhC,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBW,SAG7F,yBACE9D,UAAU,+BACVC,MAAO,CAACgD,eAAgB,SAExB,wBAAIjD,UAAU,WAAd,aACA,gCAEGhC,EAAMb,MAAQa,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAC5CnF,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBqB,gBAAkB,EACtE,IAAMxG,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBqB,eAC5D,KACF,GANN,KASA,wBAAIxE,UAAU,0BAA0BhC,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBkB,UAA9F,MAGF,yBACErE,UAAU,8BACVC,MAAO,CAACgD,eAAgB,SAExB,wBAAIjD,UAAU,WAAd,YACA,gCACIhC,EAAMb,MAAQa,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAwBnF,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBoB,aAAe,EAAwBvG,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBoB,YAAc,KAAQ,GADpP,KAGA,wBAAIvE,UAAU,uBAAuBhC,EAAMb,KAAKA,EAAKgH,WAAU,SAAAC,GAAC,MAAoB,OAAhBA,EAAEjB,cAAqBa,W,wBCpGtFU,EACF,UADEA,EAEJ,QCIHC,EAAmB,CACvBC,QAAS,QACT1G,MAAO,YA6OM2G,MA1Of,YAOI,IANFC,EAMC,EANDA,UACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,UACAC,EACC,EADDA,eAEMC,EAAgBC,iBAAO,MAD5B,EAE2CpH,mBAAS,GAFpD,mBAEMqH,EAFN,KAEsBC,EAFtB,KAIKC,EAAQxG,uBACZ,SAACyG,GACCC,IAAa,iBAAiBC,SAC9B,IAAMC,EAAgBjB,EAAiBM,EAAQY,SAEzCC,EAAMJ,IAAUN,EAAcW,SAC9BC,GAASF,EAAIG,KAAK,SAClBC,GAAUJ,EAAIG,KAAK,UAUnBE,EAAWC,IACfX,EACAA,EAAQY,QAAQpB,EAAQqB,kBAGpBC,EAAab,MAEfT,EAAQY,UAAYnB,EACtB6B,EAAWC,QAAQ,CAACR,EAAOE,GAASC,GAEpCI,EAAWE,UACT,CACE,CAAC,GAAI,IACL,CAACT,EAAOE,IAEVC,GAGJ,IAAMO,EAAOhB,IAAWa,GAEpBI,EAAoB,KAExBb,EACGc,OAAO,KACPX,KAAK,QAAS,UACdY,UAAU,QACV1J,KAAKgJ,EAASW,UACdC,QACAH,OAAO,QACPX,KAAK,QAAS,eACdA,KAAK,QAAQ,SAAUxI,GACtB,IAAMuJ,EAAIvH,SAASsF,EAAQtH,EAAEwJ,WAAWrB,MAAoB,EAO5D,OALQ,IAANoB,EACI,UACAtB,IAhDe,GAiDOsB,GAAMlC,EAAUoC,cAAgB,UAI7DjB,KAAK,IAAKS,GACVT,KAAK,iBAAkB,OACvBkB,GAAG,aAAa,SAAC1J,IAlDI,SAAC2J,GACvB,IACEpC,EAAiBoC,EAAMnC,GACvB,MAAOoC,GACPC,QAAQC,IAAI,MAAOF,IA+CnBG,CAAgB/J,EAAEwJ,WAAWrB,IAC7B,IAAM6B,EAAS/B,IAAS+B,OACxB/B,IAAU+B,EAAOC,WAAWC,YAAYF,IAASxB,KAC/C,QACA,gBAGHkB,GAAG,cAAc,SAAC1J,GACjB,IAAMgK,EAAS/B,IAAS+B,OACxB/B,IAAU+B,GAAQxB,KAAK,QAAS,2BAC5BU,IAAsBlJ,IAAGkJ,EAAoB,SAElDQ,GAAG,cAAc,SAAC1J,GACYkJ,EAAzBA,IAAsBlJ,EAAuB,KACxBA,KAE1B0J,GAAG,SAAS,SAAC1J,GACRkJ,GAGA1B,EAAQY,UAAYnB,GAGxBQ,EAAUzH,EAAEwJ,WAAWrB,GAAgBX,EAAQY,YAEhD5F,MAAM,SAAU,WAChB2G,OAAO,SACPgB,MAAK,SAAUnK,GACd,IAAMoK,EAAQ9C,EAAQtH,EAAEwJ,WAAWrB,KAAmB,EACtD,OACE/H,OACEiK,WAAkBD,GAAS/C,EAAU1E,OAAS,MAAnC,KAA4C2H,QAAQ,IAC/DC,WACF,UACAC,EAAYxK,EAAEwJ,WAAWrB,OAI/BE,EACGc,OAAO,QACPX,KAAK,SAAU,aACfA,KAAK,OAAQ,QACbA,KAAK,eAAgB,GACrBA,KACC,IACAS,EAAKN,IAAcX,EAASA,EAAQY,QAAQpB,EAAQqB,sBAG1D,CACEvB,EACAE,EACAH,EAAU1E,MACV0E,EAAUoC,aACVhC,EACAF,IAIEiD,EAAc,SAACC,GACnBA,EAAMA,EAAI/G,cAAcgH,MAAM,KAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAI3F,OAAQ6F,IAC9BF,EAAIE,GAAKF,EAAIE,GAAGC,OAAO,GAAGC,cAAgBJ,EAAIE,GAAGvL,MAAM,GAEzD,OAAOqL,EAAIK,KAAK,MAGZC,EAAaxJ,uBAAY,WAC7B,IAQIyJ,EACAC,EATE5C,EAAMJ,IAAUN,EAAcW,SAI9BpE,EAAQ+D,IACKA,KAChBiD,OAAO,CAAC,EAAG7D,EAAUoC,aAHC,IAGkC,KAK3DwB,EAAQ,YAAsD,IAApDN,EAAmD,EAAnDA,EAAGQ,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,gBAAqC,EAApBC,eACvC,GAAIV,IAAMQ,EAAY,EAAG,CACvB,IAAM5B,EAAI+B,KAAKC,MAAMH,EAAgBT,IACrC,MAAM,GAAN,OAAUpB,EAAV,KAEA,IAAMiC,EAAK,EAAIF,KAAKC,MAAMH,EAAgBT,IACpCc,EAAKH,KAAKC,MAAMH,EAAgBT,EAAI,IAC1C,MAAM,GAAN,OAAUa,EAAV,cAAkBC,IAItB,IACMtH,EAAQmH,KAAKC,OAChBlE,EAAUoC,aAFI,IAEiCpC,EAAUoC,cAA1D,GAIFuB,EAAQU,MAAMC,KAAKD,MANF,GAMkB/J,QAAQgC,KAAI,SAACgH,GAAD,OAAOA,EAAIxG,KAE1DkE,EACGc,OAAO,KACPX,KAAK,QAAS,gBACdA,KAAK,YAAa,qBAErB,IAAMoD,EAAeC,cAClBC,WAAW,IACXC,YAAY,IACZf,MAAMA,GACNgB,WAAW,GACXC,OAAOhB,GACPpI,MAAM,mBACNqJ,OAAO,YACPC,MAAMjI,GAETmE,EACG+D,OAAO,iBACPC,KAAKT,GACLxC,UAAU,QACV5G,MAAM,YAAa,UACrB,CAAC6E,EAAUoC,eAgCd,OA9BApI,qBAAU,WACR,sBAAC,4BAAAwD,EAAA,sEACoBoD,IAAQT,EAAQ8E,aADpC,OACO5M,EADP,OAEK2H,GAAaM,EAAcW,UAC7BP,EAAMrI,GACNqL,IACAjD,GAAkB,SAACyE,GAAD,OAAeA,EAAY,MALhD,0CAAD,KAQC,CAAC/E,EAAQ8E,YAAajF,EAAW0D,EAAYhD,IAiBhD1G,qBAAU,WAfmB,IAACsI,IAgBPjC,EAfPO,IAAa,gBACrBuE,QAAQ,aAAa,SAACxM,EAAG2K,EAAG8B,GAChC,IAAMtE,EACJ,aAAcnI,EAAEwJ,WACZtC,EAAgB,MAChBA,EAAgB,QACtB,OAAIyC,IAAS3J,EAAEwJ,WAAWrB,KACxBsE,EAAM9B,GAAGV,WAAWC,YAAYuC,EAAM9B,KAC/B,QAQV,CAAC9C,EAAgBH,IAGlB,yBAAKnF,UAAU,sBAAsBC,MAAO,CAACgD,eAAgB,SAC3D,yBACEkH,GAAG,QACHnE,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,gBACpBC,IAAKlF,MCzOPH,EAAU,CACdsF,MAAO,CACLnD,KAAM,QACN2C,YAAY,GAAD,OFJS,QEIT,eACXlE,QAASnB,EACT4B,gBAAiB,SAEnB,8BAA+B,CAC7Bc,KAAM,8BACN2C,YAAY,GAAD,OFVS,QEUT,+BACXlE,QAASnB,EACT4B,gBAAiB,kCAEnB,oBAAqB,CACnBc,KAAM,oBACN2C,YAAY,GAAD,OFhBS,QEgBT,0BACXlE,QAASnB,EACT4B,gBAAiB,6BAEnB,iBAAkB,CAChBc,KAAM,iBACN2C,YAAY,GAAD,OFtBS,QEsBT,uBACXlE,QAASnB,EACT4B,gBAAiB,0BAGnBkE,MAAO,CACLpD,KAAM,QACN2C,YAAY,GAAD,OF7BS,QE6BT,eACXlE,QAASnB,EACT4B,gBAAiB,kBAEnBmE,MAAO,CACLrD,KAAM,QACN2C,YAAY,GAAD,OFnCS,QEmCT,eACXlE,QAASnB,EACT4B,gBAAiB,kBAEnBoE,aAAc,CACZtD,KAAM,eACN2C,YAAY,GAAD,OFzCS,QEyCT,sBACXlE,QAASnB,EACT4B,gBAAiB,yBAEnBqE,MAAO,CACLvD,KAAM,QACN2C,YAAY,GAAD,OF/CS,QE+CT,eACXlE,QAASnB,EACT4B,gBAAiB,kBAEnBsE,UAAW,CACTxD,KAAM,YACN2C,YAAY,GAAD,OFrDS,QEqDT,mBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnBuE,OAAQ,CACNzD,KAAM,SACN2C,YAAY,GAAD,OF3DS,QE2DT,gBACXlE,QAASnB,EACT4B,gBAAiB,mBAEnBwE,IAAK,CACH1D,KAAM,MACN2C,YAAY,GAAD,OFjES,QEiET,aACXlE,QAASnB,EACT4B,gBAAiB,gBAEnByE,QAAS,CACP3D,KAAM,UACN2C,YAAY,GAAD,OFvES,QEuET,iBACXlE,QAASnB,EACT4B,gBAAiB,oBAEnB0E,QAAS,CACP5D,KAAM,UACN2C,YAAY,GAAD,OF7ES,QE6ET,iBACXlE,QAASnB,EACT4B,gBAAiB,oBAEnB,mBAAoB,CAClBc,KAAM,mBACN2C,YAAY,GAAD,OFnFS,QEmFT,yBACXlE,QAASnB,EACT4B,gBAAiB,4BAEnB,oBAAqB,CACnBc,KAAM,oBACN2C,YAAY,GAAD,OFzFS,QEyFT,sBACXlE,QAASnB,EACT4B,gBAAiB,yBAEnB2E,UAAW,CACT7D,KAAM,YACN2C,YAAY,GAAD,OF/FS,QE+FT,mBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnB4E,OAAQ,CACN9D,KAAM,SACN2C,YAAY,GAAD,OFrGS,QEqGT,gBACXlE,QAASnB,EACT4B,gBAAiB,mBAEnB,iBAAkB,CAChBc,KAAM,iBACN2C,YAAY,GAAD,OF3GS,QE2GT,uBACXlE,QAASnB,EACT4B,gBAAiB,0BAEnB6E,YAAa,CACX/D,KAAM,cACN2C,YAAY,GAAD,OFjHS,QEiHT,qBACXlE,QAASnB,EACT4B,gBAAiB,wBAEnB8E,QAAS,CACPhE,KAAM,UACN2C,YAAY,GAAD,OFvHS,QEuHT,iBACXlE,QAASnB,EACT4B,gBAAiB,oBAEnB+E,UAAW,CACTjE,KAAM,YACN2C,YAAY,GAAD,OF7HS,QE6HT,mBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnBgF,QAAS,CACPlE,KAAM,UACN2C,YAAY,GAAD,OFnIS,QEmIT,iBACXlE,QAASnB,EACT4B,gBAAiB,oBAEnBiF,SAAU,CACRnE,KAAM,WACN2C,YAAY,GAAD,OFzIS,QEyIT,kBACXlE,QAASnB,EACT4B,gBAAiB,qBAEnBkF,OAAQ,CACNpE,KAAM,SACN2C,YAAY,GAAD,OF/IS,QE+IT,gBACXlE,QAASnB,EACT4B,gBAAiB,mBAEnBmF,OAAQ,CACNrE,KAAM,SACN2C,YAAY,GAAD,OFrJS,QEqJT,gBACXlE,QAASnB,EACT4B,gBAAiB,mBAEnBoF,UAAW,CACTtE,KAAM,YACN2C,YAAY,GAAD,OF3JS,QE2JT,mBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnBqF,OAAQ,CACNvE,KAAM,SACN2C,YAAY,GAAD,OFjKS,QEiKT,gBACXlE,QAASnB,EACT4B,gBAAiB,mBAEnB,aAAc,CACZc,KAAM,aACN2C,YAAY,GAAD,OFvKS,QEuKT,oBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnBsF,UAAW,CACTxE,KAAM,YACN2C,YAAY,GAAD,OF7KS,QE6KT,mBACXlE,QAASnB,EACT4B,gBAAiB,sBAEnBuF,QAAS,CACPzE,KAAM,UACN2C,YAAY,GAAD,OFnLS,QEmLT,iBACXlE,QAASnB,EACT4B,gBAAiB,oBAEnBwF,YAAa,CACX1E,KAAM,cACN2C,YAAY,GAAD,OFzLS,QEyLT,qBACXlE,QAASnB,EACT4B,gBAAiB,wBAEnB,gBAAiB,CACfc,KAAM,gBACN2C,YAAY,GAAD,OF/LS,QE+LT,sBACXlE,QAASnB,EACT4B,gBAAiB,yBAGnB,cAAe,CACbc,KAAM,cACN2C,YAAY,GAAD,OFtMS,QEsMT,oBACXlE,QAASnB,EACT4B,gBAAiB,wBAIN,cAA+D,IAApDvE,EAAmD,EAAnDA,OAAQU,EAA2C,EAA3CA,sBAAuBsJ,EAAoB,EAApBA,kBAAoB,EAC/B9N,mBAAS,IADsB,mBACpEkH,EADoE,KACpD6G,EADoD,OAEnB/N,mBAAS,IAFU,mBAEpEgO,EAFoE,KAE9CC,EAF8C,OAGvCjO,mBAASgH,EAAQsF,OAHsB,mBAGpE4B,EAHoE,KAGxDC,EAHwD,KAU3E,GALAtN,qBAAU,WACR,IAAMuN,EAASC,EAAmBvK,EAAO,IACzCmK,EAAwBG,KACvB,CAACtK,KAECkK,EACH,OAAO,KAXkE,MAcvCM,mBAAQ,WAC1C,IAAMzH,EAAY,CAAC1E,MAAO,EAAG8G,aAAc,GACvCsF,EAAiB,GAErB,GAAIL,EAAWtG,UAAYnB,EACzB8H,EAAiBzK,EAAOM,QAAO,SAACoK,EAAKvO,GACnC,GAAoB,UAAhBA,EAAMA,MACR,OAAOuO,EAET,IAAM/M,EAAYD,SAASvB,EAAMwB,WAOjC,OANAoF,EAAU1E,OAASV,EACfA,EAAYoF,EAAUoC,eACxBpC,EAAUoC,aAAexH,GAG3B+M,EAAIvO,EAAMA,OAASA,EAAMwB,UAClB+M,IACN,SACE,GAAIN,EAAWtG,UAAYnB,EAAiB,CACjD,IAAMgI,GACJjK,EAAsB0J,EAAW/E,OAAS,CAAChE,aAAc,KACzDA,aACFoJ,EAAiBrN,OAAOC,KAAKsN,GAAkBrK,QAAO,SAACoK,EAAKvL,GAC1D,IAAMxB,EAAYD,SAASiN,EAAiBxL,GAAUxB,WAMtD,OALAoF,EAAU1E,OAASV,EACfA,EAAYoF,EAAUoC,eACxBpC,EAAUoC,aAAexH,GAE3B+M,EAAIvL,GAAYwL,EAAiBxL,GAAUxB,UACpC+M,IACN,IAEL,MAAO,CAAC3H,EAAW0H,KAClB,CAACL,EAAYpK,EAAQU,IA/CmD,mBAcpEqC,EAdoE,KAczD0H,EAdyD,KAiDrExH,EAAmBhG,uBACvB,SAACoI,EAAM+E,GACL,GAAIA,EAAWtG,UAAYnB,EACzBwH,EACEI,EAAmBvK,EAAOvE,QAAO,SAACU,GAAD,OAAWkJ,IAASlJ,EAAMA,SAAO,UAE/D,GAAIiO,EAAWtG,UAAYnB,EAAiB,CACjD,IAGItB,GAHUX,EAAsB0J,EAAW/E,OAAS,CACtDhE,aAAc,KAESA,aAAagE,GACjChE,IACHA,EAAe,CACb1D,UAAW,EACXoE,OAAQ,EACRE,OAAQ,EACRK,UAAW,IAGf6H,EAAwBS,EAAsBvJ,EAAcgE,OAGhE,CAAC3E,EAAuBV,IAG1BjD,qBAAU,WACR,QAA0B8N,IAAtBb,EAEG,GAA0B,OAAtBA,EAKX,KADkB,aAAcA,GACnB,CAEXK,EADenH,EAAO,OAEtB,IAAMoH,EAASC,EAAmBP,EAAkB7N,OACpDgO,EAAwBG,GACxBL,EAAkBK,EAAOjF,UACpB,CACL,IAAMyF,EAAS5H,EAAQ8G,EAAkB7N,MAAMA,OAC/C,IAAK2O,EACH,OAEFT,EAAcS,GACd7H,EAAiB+G,EAAkB7K,SAAU2L,GAC7Cb,EAAkBD,EAAkB7K,eAjBpC8K,EAAkB,QAmBnB,CAACD,EAAmBI,EAAWtG,QAASb,IAE3C,IAAM2H,EAAwB,SAACvJ,EAAcgE,GAC3C,GAAKhE,EAAL,CAGA,IAAMiJ,EAAM,eAAOjJ,GAInB,OAHKiJ,EAAOjF,OACViF,EAAOjF,KAAOA,GAETiF,IAGHC,EAAqB,SAACpO,GAC1B,GAAKA,EAAL,CAGA,IAAMmO,EAAM,eAAOnO,GAInB,OAHKmO,EAAOjF,OACViF,EAAOjF,KAAOiF,EAAOnO,OAEhBmO,IAGHS,EAAmB9N,uBACvB,SAACoI,GACC,IAAMyF,EAAS5H,EAAQmC,GACvB,GAAKyF,EAIL,GADAT,EAAcS,GACVA,EAAOhH,UAAYnB,EACrBM,EAAiBjD,EAAO,GAAG7D,MAAO2O,QAC7B,GAAIA,EAAOhH,UAAYnB,EAAiB,CAC7C,IAAMtB,GAAgBX,EAAsB2E,IAAS,CAAChE,aAAc,KACjEA,aACG2J,EAAc5N,OAAOC,KAAKgE,GAC7B5F,QAAO,SAAC4J,GAAD,MAAmB,YAATA,KACjB/H,MAAK,SAACiD,EAAG0K,GACR,OAAO5J,EAAa4J,GAAGtN,UAAY0D,EAAad,GAAG5C,aAClD,GACLsF,EAAiB+H,EAAaF,MAGlC,CAAC7H,EAAkBvC,EAAuBV,IAErCqF,EAAyB6E,EAAzB7E,KAAM3G,EAAmBwL,EAAnBxL,gBAEb,OACE,yBAAKT,UAAU,uBAAuBC,MAAO,CAACgD,eAAgB,SAC5D,yBAAKjD,UAAU,UACb,4BAAKmM,EAAW/E,MAChB,4BACGpG,OAAOC,YAAc,IAAM,MAAQ,QADtC,UACsD,IACnDkL,EAAWtG,UAAYnB,EAAoB,WAAa,WAAY,IAFvE,qBAOF,yBAAK1E,UAAU,aACb,yBAAKA,UAAU,iBAAiBC,MAAO,CAACgD,eAAgB,OACtD,yCACA,yBAAKjD,UAAU,gBACb,4BAAKiM,EAAqBvM,WAC1B,+BAIJ,yBACEM,UAAU,yBACVC,MAAO,CAACgD,eAAgB,SAExB,sCACA,yBAAKjD,UAAU,gBACb,4BAAKiM,EAAqBnI,QAAU,IACpC,+BAIJ,yBACE9D,UAAU,0BACVC,MAAO,CAACgD,eAAgB,SAExB,yCACA,yBAAKjD,UAAU,gBACb,4BAAKiM,EAAqB5H,WAAa,IACvC,+BAIJ,yBACErE,UAAU,yBACVC,MAAO,CAACgD,eAAgB,SAExB,wCACA,yBAAKjD,UAAU,gBACb,4BAAKiM,EAAqBjI,QAAU,IACpC,gCAKN,yBAAKhE,UAAU,gBAAgBC,MAAO,CAACgD,eAAgB,SACrD,4BAAKmE,GACJ3G,GACC,yBACET,UAAS,sBACPmM,EAAWtG,UAAYnB,EACnB,uBACA,sBAGN,4CACA,wBACEpE,MACEC,MAAMlD,KAAKmD,MAAM9D,EAAW+D,KACxB,GACAxD,EAAmBwD,IAGxBF,MAAMlD,KAAKmD,MAAM9D,EAAW+D,KACzB,GACAC,YACE,IAAIrD,KAAKX,EAAW+D,IACpB,IAAIpD,MACF,SAKb8O,EAAWtG,UAAYnB,GACxB8H,EAAe3K,QAAU,EACvB,wBAAI7B,UAAU,WAAd,yBACyBwM,EAAe3K,QADxC,WAGE,KAEHsK,EAAWtG,UAAYnB,EACtB,yBACE1E,UAAU,qBACVW,QAAS,kBAAMmM,EAAiB,WAFlC,QAME,MAGN,kBAAC,EAAD,CACEhI,UAAWA,EACXG,QAASkH,EACTpH,QAASyH,EACTxH,iBAAkBA,EAClBE,UAAW4H,EACX3H,eAAgBA,M,QC8HT8H,MAlkBf,SAAoBjP,GAAQ,IAAD,EACiBC,mBAASiP,KAD1B,mBAClBC,EADkB,KACHC,EADG,OAEWnP,mBAAS,IAFpB,mBAElBoP,EAFkB,KAENC,EAFM,OAGSrP,mBAAS,IAHlB,mBAGlBsP,EAHkB,KAGPC,EAHO,OAICvP,mBAAS,IAJV,mBAIlBoD,EAJkB,KAIXoM,EAJW,OAKDxP,mBAASD,EAAM0P,MALd,mBAKlBA,EALkB,KAKZC,EALY,OAMK1P,mBAASD,EAAM4P,SANpB,mBAMlBA,EANkB,KAMTC,EANS,OAOG5P,oBAAS,GAPZ,mBAOlB6P,EAPkB,KAOVC,EAPU,KASnBC,EAAgB3I,iBAAO,MACvB4I,EAAgB5I,iBAAO,MACvB6I,EAAgB7I,iBAAO,MACvB8I,EAAgB9I,iBAAO,MACvB+I,EAAgB/I,iBAAO,MACvBgJ,EAAgBhJ,iBAAO,MAE7BvG,qBAAU,WACR,GAAId,EAAMqP,WAAW9K,OAAS,EAAG,CAC/B,IAAM+L,EPwFL,SAAgCjB,EAAYkB,GACjD,OAAOlB,EAAWxQ,MAAMwQ,EAAW9K,OAASgM,GOzFfC,CACvBxQ,EAAMqP,WACNF,GAEFM,EAASa,EAAiB/L,OAAS,GACnC+K,EAAcgB,MAEf,CAACtQ,EAAMqP,WAAYF,IAEtBrO,qBAAU,WACR6O,EAAQ3P,EAAM0P,QACb,CAAC1P,EAAM0P,OAEV5O,qBAAU,WACR+O,EAAW7P,EAAM4P,WAChB,CAAC5P,EAAM4P,UAEV,IAAMa,EAAYzP,uBAChB,SAACqO,GAEC,IAAMqB,EAAe,EAAfA,EAA+C,GAC/CC,EAAa,IADY,GAEzBC,EAAc,IAFuB,GAIrCC,EP6CwB,SAACxB,GACnC,OAAOA,EAAWjM,KAAI,SAAC0N,GAAD,MAAW,CAC/BlR,KAAM,IAAIP,KAAKyR,EAAKlR,KAAO,SAC3BmR,gBAAiBD,EAAKC,eACtBC,gBAAiBF,EAAKE,eACtBC,eAAgBH,EAAKG,cACrBC,gBAAiBJ,EAAKI,eACtBC,gBAAiBL,EAAKK,eACtBC,eAAgBN,EAAKM,kBOrDRC,CAAqBhC,GAC1BiC,EAAIT,EAAGtM,OAGbiL,EAAaH,EAAWiC,EAAI,IAC5B7B,EAAS6B,EAAI,GAEb,IAAMC,EAAO7J,IAAUsI,EAAcjI,SAC/ByJ,EAAO9J,IAAUuI,EAAclI,SAC/B0J,EAAO/J,IAAUwI,EAAcnI,SAC/B2J,EAAOhK,IAAUyI,EAAcpI,SAC/B4J,EAAOjK,IAAU0I,EAAcrI,SAC/B6J,EAAOlK,IAAU2I,EAActI,SAE/B8J,EAAU,IAAIxS,KAAKwR,EAAG,GAAH,MACzBgB,EAAQC,QAAQD,EAAQE,UAAY,GACpC,IAAMC,EAAU,IAAI3S,KAAKwR,EAAGS,EAAI,GAAP,MACzBU,EAAQF,QAAQE,EAAQD,UAAY,GAEpC,IAAME,EAASvK,MAEZiD,OAAO,CAACkH,EAASG,IACjBE,MAAM,CAACxB,EAAaC,IAEjBwB,EAAQ,SAACC,GAAD,OACZA,EACGnK,KAAK,QAAS,UACd6D,KAAKpE,IAAcuK,GAAQI,MAAM,IACjCpQ,MAAM,YAHT,qBAGoC2O,EAHpC,SAKI0B,EAAQ,SAACF,EAAGG,GAAJ,OACZH,EACGnK,KAAK,QAAS,UACd6D,KAAKpE,IAAa6K,GAAQF,MAAM,EAAG,OAAOG,YAAY,IACtDvQ,MAAM,YAHT,qBAGoC0O,EAHpC,SAMI8B,EAAW,CAAClB,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GAC1CrS,EAAY,CAChB,iBACA,iBACA,gBACA,iBACA,iBACA,iBAEImT,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAc,IAAIC,IAAI,CAC1B,iBACA,iBACA,kBAGEC,EAAkB3D,IACtByD,EAAY9Q,SAAQ,SAACiR,GACnBD,EAAkB9H,KAAKgI,IACrBF,EACAnL,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,UAGxB,IAAME,EAAsBtL,MAEzBuL,OAAM,GACNtI,OAAO,CACNkI,EArEY,IAsEFnL,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEsR,oBAE/BmC,OACAhB,MAAM,CAACtB,EAAaF,IAEjByC,EAAmBzL,MAEtBuL,OAAM,GACNtI,OAAO,CACNI,KAAKqI,IAAI,EAAGP,GA/EA,IAgFFnL,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEsR,oBAE/BmC,OACAhB,MAAM,CAACtB,EAAaF,IAEjB2C,EAAqB3L,MAExBiD,OAAO,CAAC,EAvFK,IAuFQjD,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEyR,oBACzCgC,OACAhB,MAAM,CAACtB,EAAaF,IAEjB4C,EAAU/T,EAAU6D,KAAI,SAAC0P,GAC7B,GAAIH,EAAYY,IAAIT,GAAO,CACzB,IAAMU,EAAe9L,MAElBuL,OAAM,GACNtI,OAAO,CACNjD,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,MAjGZ,IAkGEpL,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,QAE/BI,OACAhB,MAAM,CAACtB,EAAaF,IACjB+C,EAAY/L,MAEfuL,OAAM,GACNtI,OAAO,CACNI,KAAKqI,IACH,EACA1L,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,OA5Gd,IA8GEpL,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,QAE/BI,OACAhB,MAAM,CAACtB,EAAaF,IACvB,OAAId,EAAgBF,EAAOyD,EAAmBM,EAClC/D,EAAOsD,EAAsBQ,EAEzC,IAAMA,EAAe9L,MAElBuL,OAAM,GACNtI,OAAO,CAAC,EAxHC,IAwHYjD,IAAOmJ,GAAI,SAACpR,GAAD,OAAOA,EAAEqT,QACzCI,OACAhB,MAAM,CAACtB,EAAaF,IACvB,OAAOhB,EAAO2D,EAAqBG,KAKjCE,EAAQjB,EAASrP,KAAI,SAAC0E,EAAKsC,GAC/B,OAAOtC,EACJe,UAAU,UACV1J,KAAK,CAAC0R,EAAGS,EAAI,KAAK,SAAC7R,GAAD,OAAOA,EAAEG,QAC3B2K,KAAK,UACLtC,KAAK,QAAS,SACdA,KAAK,OAAQyK,EAAOtI,IACpBnC,KAAK,SAAUyK,EAAOtI,IACtBnC,KAAK,IAAK,MAGf,SAAS0L,IACP,IAAMC,EAAKlM,IAASmM,MAAM,GACpBjU,EAAOqS,EAAO6B,OAAOF,GAEvBxJ,GAAI2J,EADWrM,KAAY,SAACjI,GAAD,OAAOA,EAAEG,QAAMoU,MAC3BnD,EAAIjR,EAAM,GAC7B,GAAI,GAAKwK,GAAKA,EAAIkH,EAAG,CACf1R,EAAOiR,EAAGzG,EAAI,GAAGxK,KAAOiR,EAAGzG,GAAGxK,KAAOA,KAAQwK,EACjDoF,EAAaH,EAAWjF,IACxBqF,EAASrF,GACT2F,GAAU,GACV,IAAMtQ,EAAIoR,EAAGzG,GACbsJ,EAAM7R,SAAQ,SAACoS,EAAGC,GAChB,IAAM3B,EAASe,EAAQY,GACjBpB,EAAOvT,EAAU2U,GACvBD,EAAEhM,KAAK,KAAMgK,EAAOxS,EAAEG,OAAOqI,KAAK,KAAMsK,EAAO9S,EAAEqT,SAKvD,SAASqB,IACP3E,EAAaH,EAAWiC,EAAI,IAC5B7B,EAAS6B,EAAI,GACbvB,GAAU,GACV2D,EAAM7R,SAAQ,SAACoS,EAAGC,GAChB,IAAM3B,EAASe,EAAQY,GACjBpB,EAAOvT,EAAU2U,GACvBD,EAAEhM,KAAK,KAAMgK,EAAOpB,EAAGS,EAAI,GAAG1R,OAAOqI,KACnC,KACAsK,EAAO1B,EAAGS,EAAI,GAAGwB,QAMvBL,EAAS5Q,SAAQ,SAACiG,EAAKsC,GAErB,IAAMgK,EAAItM,EAAIuM,aAAaC,SAAS,KAE9BxB,EAAOvT,EAAU6K,GACjBzG,EAAQ+O,EAAOtI,GACfmI,EAASe,EAAQlJ,GAoCvB,GAjCItC,EAAI+D,OAAO,WAAW0I,QACxBzM,EAAIc,OAAO,KAAKX,KAAK,QAAS,UAAU6D,KAAKqG,GAE7CrK,EAAI+D,OAAO,WAAWwI,WAAWD,GAAGtI,KAAKqG,GAGvCrK,EAAI+D,OAAO,WAAW0I,QACxBzM,EAAIc,OAAO,KAAKkD,KAAKwG,EAAOC,GAE5BzK,EAAI+D,OAAO,WAAWwI,WAAWD,GAAGtI,KAAKwG,EAAOC,GAMlDzK,EACGe,UAAU,QACV1J,KAAK0R,GAAI,SAACpR,GAAD,OAAOA,EAAEG,QAClB2K,MAAK,SAACxB,GAAD,OAAWA,EAAMH,OAAO,UAAUX,KAAK,KAAM2I,MAClD3I,KAAK,QAAS,OACdA,KAAK,OAAQtE,GACbsE,KAAK,SAAUtE,GACfsE,KAAK,IAAK,GACVoM,WAAWD,GACXnM,KAAK,MAAM,SAACxI,GAAD,OAAOwS,EAAOxS,EAAEG,SAC3BqI,KAAK,MAAM,SAACxI,GAAD,OAAO8S,EAAO9S,EAAEqT,OAE9BY,EAAMtJ,GACHiK,WAAWD,GACXnM,KAAK,MAAM,SAACxI,GAAD,OAAOwS,EAAOxS,EAAEG,SAC3BqI,KAAK,MAAM,SAACxI,GAAD,OAAO8S,EAAO9S,EAAEqT,OAG1BH,EAAYY,IAAIT,GAAO,CACzB,IAAMpK,EAAOZ,EACVe,UAAU,UACV1J,KAAK,CAAC,YAAI0R,GAAI2D,YACdjK,KAAK,QACLtC,KAAK,QAAS,SACdA,KAAK,OAAQ,QACbA,KAAK,SAAUtE,EAAQ,MACvBsE,KAAK,eAAgB,GAOxB,GAAIS,EAAKT,KAAK,KAAM,CAClB,IAAMe,EAAIN,EAAK+L,OAAOC,iBAChBtO,EAAIsC,EAAK+L,OAAOE,iBAAiB3L,GAEvCN,EAAKT,KACH,KACA,kBAAMS,EAAKT,KAAK,KAAO,WAAI7B,EAAEwO,EAAN,YAAWxO,EAAEyO,GAAIC,OAAO,EAAIxD,MAIvD5I,EAAK2L,WAAWD,GAAGnM,KACjB,IACAP,MAEGkN,GAAE,SAACnV,GAAD,OAAOwS,EAAOxS,EAAEG,SAClBiV,GAAE,SAACpV,GAAD,OAAO8S,EAAO9S,EAAEqT,OAClBiC,MAAMrN,WASXI,EACGe,UAAU,SACV1J,KAAK0R,GAAI,SAACpR,GAAD,OAAOA,EAAEG,QAClB2K,MAAK,SAACxB,GAAD,OAAWA,EAAMH,OAAO,QAAQX,KAAK,KAAM2I,MAChD3I,KAAK,QAAS,QACdhG,MAAM,SAAU0B,EAAQ,MACxB1B,MAAM,eAAgB,GACtBgG,KAAK,KAAM2I,GACXyD,WAAWD,GACXnM,KAAK,MAAM,SAACxI,GAAD,OAAOwS,EAAOxS,EAAEG,SAC3BqI,KAAK,MAAM,SAACxI,GAAD,OAAOwS,EAAOxS,EAAEG,SAC3BqI,KAAK,MAAM,SAACxI,GAAD,OAAO8S,EAAO9S,EAAEqT,OAGhChL,EACGqB,GAAG,YAAawK,GAChBxK,GAAG,YAAawK,GAChBxK,GAAG,WAAYgL,GACfhL,GAAG,WAAYgL,QAGtB,CAACvE,EAASF,IAGZ5O,qBAAU,WACJuO,EAAW9K,OAAS,GACtBkM,EAAUpB,KAEX,CAACA,EAAYoB,IAEhB,IAAMuE,EAAgB,IAAI3V,KAC1B2V,EAAclD,QAAQkD,EAAcjD,UAAY,GAChD,IAAMkD,EAAW,IAAI5V,KAAKkQ,EAAS,KAAW,QACxC2F,EACJD,EAASE,aAAeH,EAAcG,YACtCF,EAASlD,YAAciD,EAAcjD,UAEvC,OACE,yBACE/P,UAAU,6BACVC,MAAO,CAACgD,eAAgB,SAExB,yBACEjD,UAAU,aACVC,MAAO,CAACC,QAAwB,IAAflC,EAAM8S,KAAa,OAAS,SAE7C,yBAAK9Q,UAAU,cACb,yBAAKA,UAAU,SACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,aACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,gBACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,eACEgM,EAAWhM,EAAQ,GAAnB,gBACF,EACE,KACCgM,EAAWhM,GAAX,eACCgM,EAAWhM,EAAQ,GAAnB,gBACFgM,EAAWhM,GAAX,eACAgM,EAAWhM,EAAQ,GAAnB,eACF,MAIV,yBACEiJ,IAAK0D,EACLhI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAKrK,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,aACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,gBACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,eACEgM,EAAWhM,EAAQ,GAAnB,gBACF,EACE,KACCgM,EAAWhM,GAAX,eACCgM,EAAWhM,EAAQ,GAAnB,gBACFgM,EAAWhM,GAAX,eACAgM,EAAWhM,EAAQ,GAAnB,eACF,MAIV,yBACEiJ,IAAK2D,EACLjI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAKrK,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,YACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,eACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,cACEgM,EAAWhM,EAAQ,GAAnB,eACF,EACE,KACCgM,EAAWhM,GAAX,cACCgM,EAAWhM,EAAQ,GAAnB,eACFgM,EAAWhM,GAAX,cACAgM,EAAWhM,EAAQ,GAAnB,cACF,MAIV,yBACEiJ,IAAK4D,EACLlI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,oBAK1B,yBACErK,UAAU,aACVC,MAAO,CAACC,QAAwB,IAAflC,EAAM8S,KAAa,OAAS,SAE7C,yBAAK9Q,UAAU,cACb,yBAAKA,UAAU,SACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,aACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,gBACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,eACEgM,EAAWhM,EAAQ,GAAnB,gBACF,EACE,KACCgM,EAAWhM,GAAX,eACCgM,EAAWhM,EAAQ,GAAnB,gBACFgM,EAAWhM,GAAX,eACAgM,EAAWhM,EAAQ,GAAnB,eACF,MAIV,yBACEiJ,IAAK6D,EACLnI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAKrK,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,aACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,gBACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,eACEgM,EAAWhM,EAAQ,GAAnB,gBACF,EACE,KACCgM,EAAWhM,GAAX,eACCgM,EAAWhM,EAAQ,GAAnB,gBACFgM,EAAWhM,GAAX,eACAgM,EAAWhM,EAAQ,GAAnB,eACF,MAIV,yBACEiJ,IAAK8D,EACLpI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAKrK,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAM8N,EAAmB,GAAV,UAA5B,YACA,wBAAI9N,UAAS,UAAK8N,EAAS,QAAU,KAClCoF,EAAW,UACL3F,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvN,UAAU,gBACb,4BAAKuN,EAAS,eACd,4BACGF,EAAW9K,OAAS,GAAe,IAAVlB,EACtBgM,EAAWhM,GAAX,cACEgM,EAAWhM,EAAQ,GAAnB,eACF,EACE,KACCgM,EAAWhM,GAAX,cACCgM,EAAWhM,EAAQ,GAAnB,eACFgM,EAAWhM,GAAX,cACAgM,EAAWhM,EAAQ,GAAnB,cACF,MAIV,yBACEiJ,IAAK+D,EACLrI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,oBAK1B,yBAAKrK,UAAU,QAAQC,MAAO,CAACmT,UAAW,OAAQC,UAAW,UAC3D,4BACEvC,KAAK,SACLnQ,QAAS,kBAAMyM,EAAiBF,MAChClN,UAAWmN,IAAkBD,IAAW,WAAa,IAHvD,OAOA,4BACE4D,KAAK,SACLnQ,QAAS,kBAAMyM,EAAiB,KAChCpN,UAA6B,KAAlBmN,EAAuB,WAAa,GAC/CmG,aAAW,WAJb,MAQA,4BACExC,KAAK,SACLnQ,QAAS,kBAAMyM,EAAiB,KAChCpN,UAA6B,KAAlBmN,EAAuB,WAAa,GAC/CmG,aAAW,WAJb,UCzNOC,MAhWf,SAAmBvV,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBACjBoP,EADiB,KACLC,EADK,KAElBU,EAAgB3I,iBAAO,MACvB4I,EAAgB5I,iBAAO,MACvB6I,EAAgB7I,iBAAO,MACvB8I,EAAgB9I,iBAAO,MAE7BvG,qBAAU,WACJd,EAAMqP,WAAW9K,OAAS,GAC5B+K,EAActP,EAAMqP,WAAWxQ,MAAMmB,EAAMqP,WAAW9K,OAAS,OAEhE,CAACvE,EAAMqP,aAEV,IAAMoB,EAAYzP,uBAChB,SAACqO,GACC,GAAIA,EAAW9K,QAAU,EAAG,OAAO,EACnC,IAAMpF,EAAOkQ,EACPkC,EAAO7J,IAAUsI,EAAcjI,SAE/BC,EAAQ,IADwC,EAAtB,GAE1BE,EAAS,IAFM,GAAuB,GAItCsJ,EAAO9J,IAAUuI,EAAclI,SAC/B0J,EAAO/J,IAAUwI,EAAcnI,SAC/B2J,EAAOhK,IAAUyI,EAAcpI,SAE/B6M,EAAIlN,MAEPiD,OACCjD,IAAUvI,GAAM,SAAUM,GACxB,OAAO,IAAIJ,KAAKI,EAAC,KAAW,YAG/ByS,MAAM,CAAC,EAAGlK,IAEPwN,EAAK9N,MAERiD,OAAO,CACN,EACAjD,IAAOvI,GAAM,SAAUM,GACrB,OAAQA,EAAC,oBAGZyS,MAAM,CAAChK,EAAQ,IAEZuN,EAAQlE,EACX3I,OAAO,QACP8M,MAAMvW,GACN8I,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkN,GAAE,SAAUnV,GACX,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BoV,GAAE,SAAUpV,EAAG2K,GACd,OAAOoL,EAAG/V,EAAC,mBAEZsV,MAAMrN,MAGPiO,EAAeF,EAAMhB,OAAOC,iBAClCe,EACGxN,KAAK,mBAAoB0N,EAAe,IAAMA,GAC9C1N,KAAK,oBAAqB0N,GAC1BtB,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3N,KAAK,oBAAqB,GAE7BsJ,EACG1I,UAAU,QACV1J,KAAKA,EAAKN,MAAMM,EAAKoF,OAAS,IAC9BwE,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUxI,GACpB,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BwI,KAAK,MAAM,SAAUxI,GACpB,OAAO+V,EAAG/V,EAAC,mBAEZ0J,GAAG,aAAa,SAAC1J,GAChBiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAC1J,GACfiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtChG,MAAM,UAAW,GACjBoS,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3T,MAAM,UAAW,GAEpB,IAAM4T,EAAQrE,EACX5I,OAAO,QACP8M,MAAMvW,GACN8I,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkN,GAAE,SAAUnV,GACX,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BoV,GAAE,SAAUpV,EAAG2K,GACd,OACSoL,EACL/V,EAAC,eAAqBA,EAAC,eAAqBA,EAAC,kBAQlDsV,MAAMrN,MAGPoO,EAAeD,EAAMpB,OAAOC,iBAClCmB,EACG5N,KAAK,mBAAoB6N,EAAe,IAAMA,GAC9C7N,KAAK,oBAAqB6N,GAC1BzB,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3N,KAAK,oBAAqB,GAE7BuJ,EACG3I,UAAU,QACV1J,KAAKA,EAAKN,MAAMM,EAAKoF,OAAS,IAC9BwE,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUxI,GACpB,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BwI,KAAK,MAAM,SAAUxI,GASpB,OAAO+V,EACL/V,EAAC,eAAqBA,EAAC,eAAqBA,EAAC,kBAGhD0J,GAAG,aAAa,SAAC1J,GAChBiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAC1J,GACfiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtChG,MAAM,UAAW,GACjBoS,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3T,MAAM,UAAW,GAEpB,IAAM8T,EAAQtE,EACX7I,OAAO,QACP8M,MAAMvW,GACN8I,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkN,GAAE,SAAUnV,GACX,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BoV,GAAE,SAAUpV,EAAG2K,GACd,OACSoL,EAAG/V,EAAC,mBAKdsV,MAAMrN,MAGPsO,EAAeP,EAAMhB,OAAOC,iBAClCqB,EACG9N,KAAK,mBAAoB+N,EAAe,IAAMA,GAC9C/N,KAAK,oBAAqB+N,GAC1B3B,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3N,KAAK,oBAAqB,GAE7BwJ,EACG5I,UAAU,QACV1J,KAAKA,EAAKN,MAAMM,EAAKoF,OAAS,IAC9BwE,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUxI,GACpB,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BwI,KAAK,MAAM,SAAUxI,GACpB,OAAO+V,EAAG/V,EAAC,mBAEZ0J,GAAG,aAAa,SAAC1J,GAChBiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAC1J,GACfiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtChG,MAAM,UAAW,GACjBoS,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3T,MAAM,UAAW,GAEpB,IAAMgU,EAAQvE,EACX9I,OAAO,QACP8M,MAAMvW,GACN8I,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkN,GAAE,SAAUnV,GACX,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BoV,GAAE,SAAUpV,EAAG2K,GACd,OACSoL,EAAG/V,EAAC,kBAKdsV,MAAMrN,MAGPwO,EAAeD,EAAMxB,OAAOC,iBAClCuB,EACGhO,KAAK,mBAAoBiO,EAAe,IAAMA,GAC9CjO,KAAK,oBAAqBiO,GAC1B7B,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3N,KAAK,oBAAqB,GAE7ByJ,EACG7I,UAAU,QACV1J,KAAKA,EAAKN,MAAMM,EAAKoF,OAAS,IAC9BwE,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUxI,GACpB,OAAOmV,EAAE,IAAIvV,KAAKI,EAAC,KAAW,YAE/BwI,KAAK,MAAM,SAAUxI,GACpB,OAAO+V,EAAG/V,EAAC,kBAEZ0J,GAAG,aAAa,SAAC1J,GAChBiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAC1J,GACfiI,IAAUA,IAAS+B,QAAQxB,KAAK,IAAK,QAEtChG,MAAM,UAAW,GACjBoS,aACAC,SAAStU,EAAM4V,QAAU,IAAO,GAChC3T,MAAM,UAAW,KAEtB,CAACjC,EAAM4V,UAOT,OAJA9U,qBAAU,WACR2P,EAAUpB,KACT,CAACA,EAAYoB,IAGd,yBAAKzO,UAAU,aACb,yBAAKA,UAAU,sBAAsBC,MAAO,CAACgD,eAAgB,SAC3D,yBACEqH,IAAK0D,EACLhI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACErK,UAAU,8BACVC,MAAO,CAACgD,eAAgB,SAExB,yBACEqH,IAAK2D,EACLjI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACErK,UAAU,+BACVC,MAAO,CAACgD,eAAgB,SAExB,yBACEqH,IAAK4D,EACLlI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACErK,UAAU,8BACVC,MAAO,CAACgD,eAAgB,SAExB,yBACEqH,IAAK6D,EACLnI,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,qBCpFf8J,MAvPf,SAAcnW,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBACZgG,EADY,KACJJ,EADI,OAES5F,mBAAS,IAFlB,mBAEZ8D,EAFY,KAEJC,EAFI,OAGuC/D,mBAAS,IAHhD,mBAGZwE,EAHY,KAGW2R,EAHX,OAKWnW,oBAAS,GALpB,mBAKZoW,EALY,KAKHC,EALG,OAMmBrW,mBAAS,GAN5B,mBAMZsW,EANY,KAMCC,EAND,OAOmBvW,mBAAS,IAP5B,mBAOZwW,EAPY,KAOCC,EAPD,OAQiBzW,mBAAS,IAR1B,mBAQZoP,EARY,KAQAC,EARA,OASmBrP,mBAAS,IAT5B,mBASZ0W,EATY,KASCC,EATD,OAUyB3W,oBAAS,GAVlC,mBAUZ4W,EAVY,KAUIC,GAVJ,QAW+B7W,oBAAS,GAXxC,qBAWZ8W,GAXY,MAWOC,GAXP,SAY+B/W,wBAAS2O,GAZxC,qBAYZb,GAZY,MAYOkJ,GAZP,MAcnBnW,qBAAU,YACQ,IAAZuV,GACFa,OAED,CAACb,IAEJ,IAAMa,GAAS,uCAAG,oCAAA5S,EAAA,+EAMJ6S,QAAQC,IAAI,CACpBC,IAAMC,IAAI,0CACVD,IAAMC,IAAI,yDACVD,IAAMC,IAAI,qDATE,mCAGZC,EAHY,KAIZC,EAJY,KAKZC,EALY,KAWdzT,EAAUuT,EAASpY,KAAKuY,WACxB7R,EAAU0R,EAASpY,KAAKwY,YACxBrI,EAAcpQ,EAAYqY,EAASpY,KAAKyY,oBACxClB,EAAea,EAASpY,KAAKuY,UAAU,GAAGjV,iBAC1C2T,EAAyBoB,EAA0BrY,MACnDyX,EAAea,EAAkBtY,MAEjCmX,GAAW,GAlBG,kDAoBdhN,QAAQC,IAAR,MApBc,0DAAH,qDAiCf,OADAD,QAAQC,IAAI,uBAAwB8F,GAElC,kBAAC,IAAMtN,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAkBC,MAAO,CAACgD,eAAgB,OACvD,yBAAKjD,UAAU,cACb,yBAAKA,UAAU,UACb,uDACA,wBAAIC,MAAO,CAACyB,WAAY,MAAxB,iCAEF,yBAAK1B,UAAU,eACb,4CACA,wBAAIC,MAAO,CAAC0B,MAAO,UAAWD,WAAY,MACvCnB,MAAMlD,KAAKmD,MAAM9D,EAAW+X,KACzB,GACA/T,YACE,IAAIrD,KAAKX,EAAW+X,IACpB,IAAIpX,MACF,QAEV,wBAAI4C,MAAO,CAAC0B,MAAO,UAAWD,WAAY,MACvCnB,MAAMlD,KAAKmD,MAAM9D,EAAW+X,KACzB,GACAxX,EAAmBwX,OAM9B1S,EAAOQ,OAAS,GAAM,kBAAC,EAAD,CAAOpF,KAAM4E,EAAQkC,OAAQA,IACpD,kBAAC,EAAD,CAAWoJ,WAAYA,EAAYuG,SAAS,IAC5C,kBAAC,EAAD,CACE7R,OAAQA,EACRK,SAAS,EACTK,sBAAuBA,EACvBY,iBA5Ce,SAACnF,EAAOmD,GAE1B4T,GADA/W,GAAUmD,EACW,CAACnD,QAAOmD,SADS,OA4CnCE,oBAzCkB,SAACL,EAAUhD,EAAOmD,GAEvC4T,GADA/W,GAAUmD,GAAUH,EACC,CAACA,WAAUhD,QAAOmD,SADY,UA4CpD,yBAAKrB,UAAU,cACZqU,GACC,kBAAC,IAAMtU,SAAP,KACE,kBAAC,EAAD,CACEgC,OAAQA,EACRU,sBAAuBA,EACvBsJ,kBAAmBA,KAGrB,yBACE/L,UAAU,6BACVC,MAAO,CAACgD,eAAgB,SAExB,6CACA,yBAAKjD,UAAU,QACb,yBACEA,UAAS,cAAyB,IAAhBuU,EAAoB,UAAY,IAClD5T,QAAS,WACP6T,EAAe,KAGjB,2CAEF,yBACExU,UAAS,cAAyB,IAAhBuU,EAAoB,UAAY,IAClD5T,QAAS,WACP6T,EAAe,KAGjB,uCAIJ,yBAAKxU,UAAU,eACb,8CACA,yBAAKA,UAAU,mBACb,2BAAO6V,QAAQ,mBAAf,WACA,2BACE/E,KAAK,WACLgF,QAASjB,EACT7U,UAAU,SACVsT,aAAW,yCACXyC,SAAU,SAACC,GACTlB,IAAmBD,OAIzB,yBACE7U,UAAS,6BACS,IAAhBuU,EAAoB,WAAa,KAGnC,2BAAOsB,QAAQ,sBAAf,eACA,2BACE/E,KAAK,WACLgF,QAAyB,IAAhBvB,GAAqBQ,GAC9B/U,UAAU,SACViW,SAA0B,IAAhB1B,EACVwB,SAAU,SAACC,GACThB,IAAsBD,UAOhC,kBAAC,EAAD,CACE1H,WAAYA,EACZyD,KAAMyD,EACN7G,KAAMmH,EACNjH,QAASmH,QA0CnB,yBAAK/U,UAAU,QACb,yBAAKA,UAAU,aACb,yBACEA,UAAU,0BACVC,MAAO,CAACgD,eAAgB,SAExB,uCACA,4BAAKiT,YAAO,IAAI7Y,KAAQ,WAG1B,yBAAK2C,UAAU,mBAAmBC,MAAO,CAACgD,eAAgB,SACvD0R,EACE9X,OAAO,GACP2V,UACApR,KAAI,SAAU+U,EAAU9U,GACvB,OACE,yBAAKvB,IAAKuB,EAAOrB,UAAU,UACzB,4BACGU,YACC,IAAIrD,KAA0B,IAArB8Y,EAASC,WAClB,IAAI/Y,MACF,QAEN,4BAAK8Y,EAASE,YAItB,4BAAQrW,UAAU,UAChB,kBAAC,IAAD,CAAMkD,GAAG,iBACP,kBAAC,IAAD,MACA,0DAMR,yBAAKlD,UAAU,kBCzMRsW,MAtDf,SAAgBtY,GAEd,IAAMuY,EAAe,SAAC7P,EAAMzD,GAAP,MAA2B,CAC9CjD,UAAU,YAAD,OAAcgB,OAAOwV,SAASC,WAAa/P,EAAO,UAAY,IACvEzG,MAAO,CACLgD,eAAe,GAAD,OAAKA,EAAL,QAIlB,MAAiC,aAA7BjC,OAAOwV,SAASC,SAEhB,yBACEzW,UAAU,SACVC,MAAO,CACLgD,eAAgB,OAChBoP,WAAY,yBAGb,yBAAKrS,UAAU,eACV,kBAAC,IAAD,CAAMkD,GAAIlF,EAAM0Y,MAAM,GAAGC,UACvB,yBACMJ,EAAavY,EAAM0Y,MAAM,GAAGC,SAAU3Y,EAAM0Y,MAAM,GAAGE,yBAExD5Y,EAAM0Y,MAAM,GAAGG,eAI1B,yBACE7W,UAAU,gBACV8W,IAAI,0BACJC,IAAI,YACJ9W,MAAO,CACLgD,eAAgB,OAChBoP,WAAY,0BAIhB,yBAAKrS,UAAU,gBACT,kBAAC,IAAD,CAAMkD,GAAIlF,EAAM0Y,MAAM,GAAGC,UACvB,yBACMJ,EAAavY,EAAM0Y,MAAM,GAAGC,SAAU3Y,EAAM0Y,MAAM,GAAGE,yBAExD5Y,EAAM0Y,MAAM,GAAGG,gBAQvB,+BCPIG,MA3Cf,SAAahZ,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACXgZ,EADW,KACNC,EADM,KAGlBpY,qBAAU,WACRqY,MACC,IAEHrY,qBAAU,WACRkC,OAAOoW,SAAS,EAAG,KAClB,IAEH,IAAMD,EAAU,WACd9B,IACGC,IAAI,kDACJ+B,MAAK,SAAC9B,GACL2B,EAAO3B,EAASpY,KAAT,QAERma,OAAM,SAACC,GACNjQ,QAAQC,IAAIgQ,OAIlB,OACE,yBAAKvX,UAAU,OACZiX,EAAI7V,KAAI,SAAC6V,EAAK5V,GACb,OACE,yBACEvB,IAAKuB,EACLrB,UAAU,eACVC,MAAO,CAACgD,eAAe,GAAD,OAAK,GAAc,GAAR5B,EAAX,OAEtB,wBAAIrB,UAAU,YAAYiX,EAAIO,UAC9B,wBACExX,UAAU,SACVyX,wBAAyB,CAACC,OAAQT,EAAIU,gBCkBrCC,MApDf,SAAgB5Z,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBACd4Z,EADc,KACJC,EADI,OAES7Z,qBAFT,mBAEd8Z,EAFc,KAELC,EAFK,KAIrBlZ,qBAAU,WACRuW,IACGC,IAAI,kDACJ+B,MAAK,SAAC9B,GACLuC,EAAYvC,EAASpY,KAAK8a,UAAY,IACtCD,EACEzC,EAASpY,KAAK8a,SACZlP,KAAKC,MACHD,KAAKmP,UAAY3C,EAASpY,KAAK8a,SAAS1V,OAAS,EAAI,GAAK,KAEzD,OAGR+U,OAAM,SAACjQ,GACNC,QAAQC,IAAIF,QAEf,IAEH,IAAM8Q,EAAiBnZ,uBACrB,SAAC+R,EAAKK,GACJ,IAAM/P,EAAQ0H,KAAKmP,UAAY9G,EAAML,GAAOA,EAC5CiH,EAAWH,EAAS9O,KAAKC,MAAM3H,OAEjC,CAACwW,IAUH,OAPA/Y,qBAAU,WACR,IAAMsZ,EAAWC,aAAY,WAC3BF,EAAe,EAAGN,EAAStV,OAAS,KACnC,KACH,OAAO,kBAAM+V,cAAcF,MAC1B,CAACD,EAAgBN,IAEa,cAA7B7W,OAAOwV,SAASC,SAEhB,yBACE9V,QAAS,kBAAMwX,EAAe,EAAGN,EAAStV,OAAS,IACnDvC,UAAU,kBACVC,MAAO,CAACgD,eAAgB,SAExB,yBAAKjD,UAAU,WAAW+X,EAAUA,EAAQQ,OAAS,GAArD,UAIG,+B,8CC8BIC,IC9DTC,EAAUC,EAAQ,IAAWC,qBAyHpBC,MAvHf,WACE,IAAMlC,EAAQ,CACZ,CACEC,SAAU,IACVkC,KAAM1E,EACN0C,YAAa,OACbD,wBAAyB,IAoB3B,CACED,SAAU,OACVkC,KAAM7B,EACNH,YAAa,QACbD,wBAAyB,KAI7B,OACE,yBAAK5W,UAAU,OACb,kBAAC,IAAD,CAAQyY,QAASA,GACf,kBAAC,IAAD,CACEK,OAAQ,gBAAEtC,EAAF,EAAEA,SAAF,OACN,yBAAKxW,UAAU,mBACb,kBAAC,EAAD,CAAQ0W,MAAOA,IACf,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOqC,OAAK,EAACrS,KAAK,IAAIoS,OAAQ,kBAAM,kBAAC,IAAD,CAAU5V,GAAG,SACjD,kBAAC,IAAD,CAAQsT,SAAUA,GACfE,EAAMtV,KAAI,SAAC4X,EAAM5Q,GAChB,OACE,kBAAC,IAAD,CACE2Q,OAAK,EACLrS,KAAMsS,EAAKrC,SACXsC,UAAWD,EAAKH,KAChB/Y,IAAKsI,OAIX,kBAAC,IAAD,CAAUlF,GAAG,YAOvB,4BAAQlD,UAAU,WAAWC,MAAO,CAACgD,eAAgB,OAMnD,iFACA,yBAAKjD,UAAU,QACb,uBACEkZ,KAAK,kCACLzR,OAAO,SACP0R,IAAI,uBAHN,iBAQF,uBACED,KAAK,qDACLlZ,UAAU,gBACVyH,OAAO,SACP0R,IAAI,uBAEJ,kBAAC,IAAD,MACA,yDAEF,uBACEnZ,UAAU,eACVkZ,KAAK,2BACLzR,OAAO,SACP0R,IAAI,uBAEJ,kBAAC,IAAD,MACA,oEAEF,uBACED,KAAK,sCACLzR,OAAO,SACP0R,IAAI,sBACJnZ,UAAU,iBACVC,MAAO,CAACmZ,eAAgB,WAExB,kBAAC,IAAD,MACA,0DAEF,uBACEF,KAAK,8BACLlZ,UAAU,kBACVyH,OAAO,SACP0R,IAAI,uBAEJ,kBAAC,IAAD,MACA,mECzHUE,QACW,cAA7BrY,OAAOwV,SAAS8C,UAEe,UAA7BtY,OAAOwV,SAAS8C,UAEhBtY,OAAOwV,SAAS8C,SAASC,MACvB,2DCbNC,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcpU,MACrB6R,MAAK,SAACwC,GACLA,EAAaC,gBAEdxC,OAAM,SAACC,GACNjQ,QAAQiQ,MAAMA,EAAMwC,c","file":"static/js/main.a89ae7b4.chunk.js","sourcesContent":["const months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nconst stateCodes = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DB: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nexport const getStateName = (code) => {\n  return stateCodes[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nexport const validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return timeseries.map((stat) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(timeseries.length - days);\n}\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      \n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`sticky district-heading`}\n      >\n        <td className=\"sticky\">\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td className=\"sticky\" onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td className=\"sticky\">\n          <div className=\"heading-content\">\n            <abbr title=\"District\">Active</abbr>\n          </div>\n        </td>\n        <td className=\"sticky\">\n          <div className=\"heading-content\">\n            <abbr title=\"District\">Recovered</abbr>\n          </div>\n        </td>\n        <td className=\"sticky\">\n          <div className=\"heading-content\">\n            <abbr title=\"District\">Deceased</abbr>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  // style={{\n                  //   display: props.reveal && !props.total ? '' : 'none',\n                  //   background: index % 2 === 0 ? '#f8f9fa' : '',\n                  // }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  touchstart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {sortedDistricts[district].confirmed}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            <span className=\"table__count-text\">\n              {sortedDistricts['Unknown'].confirmed}\n            </span>\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1.5s'}}>\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n        {/* <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">District</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead> */}\n\n        <tbody>\n          {\n          states.map((state, index) => {\n            // console.log(\"my states\", states.findIndex(p => p.statecode === \"KL\"));\n            if (index !== 0 && state.statecode===\"KL\" && state.confirmed > 0) {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    state.state in districts\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [districtIndex, setdistrictIndex] = useState(0);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [deltas, setDeltas] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      let deltas = {};\n      const districtIndex = parseInt(data.findIndex(p => p.statecode === \"KL\"));\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        } else {\n          deltas = {\n            confirmed: parseInt(state.deltaconfirmed),\n            deaths: parseInt(state.deltadeaths),\n            recovered: parseInt(state.deltarecovered),\n          };\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n      setDeltas(deltas);\n      setdistrictIndex(districtIndex);\n    };\n    parseData();\n  }, [data]);\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {props.data && props.data[data.findIndex(p => p.statecode === \"KL\")]\n            ? props.data[data.findIndex(p => p.statecode === \"KL\")].deltaconfirmed >= 0\n              ? '+' + props.data[data.findIndex(p => p.statecode === \"KL\")].deltaconfirmed\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{props.data[data.findIndex(p => p.statecode === \"KL\")].confirmed} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{props.data[data.findIndex(p => p.statecode === \"KL\")].active}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {props.data && props.data[data.findIndex(p => p.statecode === \"KL\")]\n            ? props.data[data.findIndex(p => p.statecode === \"KL\")].deltarecovered >= 0\n              ? '+' + props.data[data.findIndex(p => p.statecode === \"KL\")].deltarecovered\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{props.data[data.findIndex(p => p.statecode === \"KL\")].recovered} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [{props.data && props.data[data.findIndex(p => p.statecode === \"KL\")] ? (props.data[data.findIndex(p => p.statecode === \"KL\")].deltadeaths >= 0 ? '+' + props.data && props.data[data.findIndex(p => p.statecode === \"KL\")].deltadeaths : '+0') : ''}]\n        </h4>\n        <h1 className=\"title has-text-grey\">{props.data[data.findIndex(p => p.statecode === \"KL\")].deaths}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n          const target = d3.event.target;\n          d3.select(target.parentNode.appendChild(target)).attr(\n            'class',\n            'map-hover'\n          );\n        })\n        .on('mouseleave', (d) => {\n          const target = d3.event.target;\n          d3.select(target).attr('class', 'path-region map-default');\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport default function ({states, stateDistrictWiseData, regionHighlighted}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  useEffect(() => {\n    const region = getRegionFromState(states[1]);\n    setCurrentHoveredRegion(region);\n  }, [states]);\n\n  if (!currentHoveredRegion) {\n    return null;\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        setCurrentHoveredRegion(\n          getRegionFromState(states.filter((state) => name === state.state)[0])\n        );\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n      }\n    },\n    [stateDistrictWiseData, states]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setCurrentHoveredRegion(region);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return;\n    }\n    const region = {...districtData};\n    if (!region.name) {\n      region.name = name;\n    }\n    return region;\n  };\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return;\n    }\n    const region = {...state};\n    if (!region.name) {\n      region.name = region.state;\n    }\n    return region;\n  };\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[1].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\n          .districtData;\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  return (\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.5s'}}>\n      <div className=\"header\">\n        <h1>{currentMap.name}</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.confirmed}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>Active</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.active || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>Deceased</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n      />\n    </div>\n  );\n}\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport {\n  preprocessTimeseries,\n  sliceTimeseriesFromEnd,\n} from '../utils/common-functions';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(Infinity);\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [moving, setMoving] = useState(false);\n\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n  const graphElement5 = useRef(null);\n  const graphElement6 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(\n        props.timeseries,\n        lastDaysCount\n      );\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [props.timeseries, lastDaysCount]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      // Margins\n      const margin = {top: 0, right: 40, bottom: 60, left: 35};\n      const chartRight = 650 - margin.right;\n      const chartBottom = 200 - margin.bottom;\n\n      const ts = preprocessTimeseries(timeseries);\n      const T = ts.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n      const svg5 = d3.select(graphElement5.current);\n      const svg6 = d3.select(graphElement6.current);\n\n      const dateMin = new Date(ts[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(ts[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(8))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\n      const dataTypes = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n      const colors = [\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n      ];\n      const totalCharts = new Set([\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ]);\n\n      let uniformScaleMin = Infinity;\n      totalCharts.forEach((type) => {\n        uniformScaleMin = Math.min(\n          uniformScaleMin,\n          d3.min(ts, (d) => d[type])\n        );\n      });\n      const yScaleUniformLinear = d3\n        .scaleLinear()\n        .clamp(true)\n        .domain([\n          uniformScaleMin,\n          yBuffer * d3.max(ts, (d) => d.totalconfirmed),\n        ])\n        .nice()\n        .range([chartBottom, margin.top]);\n\n      const yScaleUniformLog = d3\n        .scaleLog()\n        .clamp(true)\n        .domain([\n          Math.max(1, uniformScaleMin),\n          yBuffer * d3.max(ts, (d) => d.totalconfirmed),\n        ])\n        .nice()\n        .range([chartBottom, margin.top]);\n\n      const yScaleDailyUniform = d3\n        .scaleLinear()\n        .domain([0, yBuffer * d3.max(ts, (d) => d.dailyconfirmed)])\n        .nice()\n        .range([chartBottom, margin.top]);\n\n      const yScales = dataTypes.map((type) => {\n        if (totalCharts.has(type)) {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(ts, (d) => d[type]),\n              yBuffer * d3.max(ts, (d) => d[type]),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(ts, (d) => d[type])\n              ),\n              yBuffer * d3.max(ts, (d) => d[type]),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        } else {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([0, yBuffer * d3.max(ts, (d) => d[type])])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        }\n      });\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([ts[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 5);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(ts, date, 1);\n        if (0 <= i && i < T) {\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = ts[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = dataTypes[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = dataTypes[j];\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\n            'cy',\n            yScale(ts[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n\n        const type = dataTypes[i];\n        const color = colors[i];\n        const yScale = yScales[i];\n        // WARNING: Bad code ahead.\n        /* X axis */\n        if (svg.select('.x-axis').empty()) {\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\n        } else {\n          svg.select('.x-axis').transition(t).call(xAxis);\n        }\n        /* Y axis */\n        if (svg.select('.y-axis').empty()) {\n          svg.append('g').call(yAxis, yScale);\n        } else {\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\n        }\n        // ^This block of code should be written in a more d3 way following the\n        //  General Update Pattern. Can't find of a way to do that within React.\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(ts, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 3)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        /* Add trend path */\n        if (totalCharts.has(type)) {\n          const path = svg\n            .selectAll('.trend')\n            .data([[...ts].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 5);\n\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n\n          path.transition(t).attr(\n            'd',\n            d3\n              .line()\n              .x((d) => xScale(d.date))\n              .y((d) => yScale(d[type]))\n              .curve(d3.curveCardinal)\n          );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          svg\n            .selectAll('.stem')\n            .data(ts, (d) => d.date)\n            .join((enter) => enter.append('line').attr('y2', chartBottom))\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .attr('y1', chartBottom)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[type]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const yesterdayDate = new Date();\n  yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n  const lastDate = new Date(datapoint['date'] + '2020');\n  const isYesterday =\n    lastDate.getMonth() === yesterdayDate.getMonth() &&\n    lastDate.getDate() === yesterdayDate.getDate();\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalconfirmed'] -\n                        timeseries[index - 1]['totalconfirmed'])\n                    : timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement1}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalrecovered'] -\n                        timeseries[index - 1]['totalrecovered'])\n                    : timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement2}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totaldeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totaldeceased'] -\n                        timeseries[index - 1]['totaldeceased'])\n                    : timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement3}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyconfirmed'] -\n                        timeseries[index - 1]['dailyconfirmed'])\n                    : timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement4}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyrecovered'] -\n                        timeseries[index - 1]['dailyrecovered'])\n                    : timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement5}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailydeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailydeceased'] -\n                        timeseries[index - 1]['dailydeceased'])\n                    : timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement6}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div className=\"pills\" style={{marginTop: '32px', textAlign: 'right'}}>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1M\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          14D\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\n    }\n  }, [props.timeseries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (timeseries.length <= 1) return 0;\n      const data = timeseries;\n      const svg1 = d3.select(graphElement1.current);\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(\n          d3.extent(data, function (d) {\n            return new Date(d['date'] + '2020');\n          })\n        )\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([\n          0,\n          d3.max(data, function (d) {\n            return +d['dailyconfirmed'];\n          }),\n        ])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              return y1(d['dailyconfirmed']);\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyconfirmed']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              } else {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          /* const today =\n          data[data.length - 1]['dailyconfirmed'] -\n          data[data.length - 1]['dailyrecovered'] -\n          data[data.length - 1]['dailydeceased'];\n        const yesterday =\n          data[data.length - 2]['dailyconfirmed'] -\n          data[data.length - 2]['dailyrecovered'] -\n          data[data.length - 2]['dailydeceased'];*/\n          return y1(\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n          );\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailyrecovered']);\n              } else {\n                return y1(d['dailyrecovered']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyrecovered']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailydeceased']);\n              } else {\n                return y1(d['dailydeceased']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailydeceased']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n    },\n    [props.animate]\n  );\n\n  useEffect(() => {\n    graphData(timeseries);\n  }, [timeseries, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  validateCTS,\r\n} from '../utils/common-functions';\r\nimport * as Icon from 'react-feather';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Table from './table';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport TimeSeries from './timeseries';\r\nimport Minigraph from './minigraph';\r\n\r\nfunction Home(props) {\r\n  const [deltas, setDeltas] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\r\n  /* const [patients, setPatients] = useState([]);*/\r\n  const [fetched, setFetched] = useState(false);\r\n  const [graphOption, setGraphOption] = useState(1);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [activityLog, setActivityLog] = useState([]);\r\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n        stateDistrictWiseResponse,\r\n        updateLogResponse,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setDeltas(response.data.key_values);\r\n      setTimeseries(validateCTS(response.data.cases_time_series));\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\r\n      setActivityLog(updateLogResponse.data);\r\n      /* setPatients(rawDataResponse.data.raw_data.filter((p) => p.detectedstate));*/\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = (state, index) => {\r\n    if (!state && !index) setRegionHighlighted(null);\r\n    else setRegionHighlighted({state, index});\r\n  };\r\n  const onHighlightDistrict = (district, state, index) => {\r\n    if (!state && !index && !district) setRegionHighlighted(null);\r\n    else setRegionHighlighted({district, state, index});\r\n  };\r\n  console.log(\"timeseries from home\", timeseries);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Home\">\r\n        <div className=\"home-left\">\r\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\r\n            <div className=\"header-mid\">\r\n              <div className=\"titles\">\r\n                <h1>Kerala COVID-19 Tracker</h1>\r\n                <h6 style={{fontWeight: 600}}>Cloned from covid19India.org</h6>\r\n              </div>\r\n              <div className=\"last-update\">\r\n                <h6>Last Updated</h6>\r\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                </h6>\r\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                </h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {states.length > 1 &&  <Level data={states} deltas={deltas} />}\r\n          <Minigraph timeseries={timeseries} animate={true} />\r\n          <Table\r\n            states={states}\r\n            summary={false}\r\n            stateDistrictWiseData={stateDistrictWiseData}\r\n            onHighlightState={onHighlightState}\r\n            onHighlightDistrict={onHighlightDistrict}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"home-right\">\r\n          {fetched && (\r\n            <React.Fragment>\r\n              <MapExplorer\r\n                states={states}\r\n                stateDistrictWiseData={stateDistrictWiseData}\r\n                regionHighlighted={regionHighlighted}\r\n              />\r\n\r\n              <div\r\n                className=\"timeseries-header fadeInUp\"\r\n                style={{animationDelay: '2.5s'}}\r\n              >\r\n                <h1>Spread Trends</h1>\r\n                <div className=\"tabs\">\r\n                  <div\r\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\r\n                    onClick={() => {\r\n                      setGraphOption(1);\r\n                    }}\r\n                  >\r\n                    <h4>Cumulative</h4>\r\n                  </div>\r\n                  <div\r\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\r\n                    onClick={() => {\r\n                      setGraphOption(2);\r\n                    }}\r\n                  >\r\n                    <h4>Daily</h4>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"scale-modes\">\r\n                  <label>Scale Modes</label>\r\n                  <div className=\"timeseries-mode\">\r\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={timeseriesMode}\r\n                      className=\"switch\"\r\n                      aria-label=\"Checked by default to scale uniformly.\"\r\n                      onChange={(event) => {\r\n                        setTimeseriesMode(!timeseriesMode);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`timeseries-logmode ${\r\n                      graphOption !== 1 ? 'disabled' : ''\r\n                    }`}\r\n                  >\r\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={graphOption === 1 && timeseriesLogMode}\r\n                      className=\"switch\"\r\n                      disabled={graphOption !== 1}\r\n                      onChange={(event) => {\r\n                        setTimeseriesLogMode(!timeseriesLogMode);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <TimeSeries\r\n                timeseries={timeseries}\r\n                type={graphOption}\r\n                mode={timeseriesMode}\r\n                logMode={timeseriesLogMode}\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n\r\n        {/* <div className=\"home-left\">\r\n        {patients.length > 1 && (\r\n          <div className=\"patients-summary\">\r\n            <h1>Recent Cases</h1>\r\n            <h6>A summary of the latest reported cases</h6>\r\n            <div className=\"legend\">\r\n              <div className=\"legend-left\">\r\n                <div className=\"circle is-female\"></div>\r\n                <h5 className=\"is-female\">Female</h5>\r\n                <div className=\"circle is-male\"></div>\r\n                <h5 className=\"is-male\">Male</h5>\r\n                <div className=\"circle\"></div>\r\n                <h5 className=\"\">Unknown</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"patients-summary-wrapper\">\r\n              <Patients\r\n                patients={patients}\r\n                summary={true}\r\n                colorMode={'genders'}\r\n                expand={true}\r\n              />\r\n            </div>\r\n            <button className=\"button\">\r\n              <Link to=\"/database\">\r\n                <Icon.Database />\r\n                <span>View the Patients Database</span>\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"home-right\"></div>\r\n    */}\r\n      </div>\r\n\r\n      <div className=\"Home\">\r\n        <div className=\"home-left\">\r\n          <div\r\n            className=\"updates-header fadeInUp\"\r\n            style={{animationDelay: '1.5s'}}\r\n          >\r\n            <h1>Updates</h1>\r\n            <h2>{format(new Date(), 'd MMM')}</h2>\r\n          </div>\r\n\r\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\r\n            {activityLog\r\n              .slice(-5)\r\n              .reverse()\r\n              .map(function (activity, index) {\r\n                return (\r\n                  <div key={index} className=\"update\">\r\n                    <h5>\r\n                      {formatDistance(\r\n                        new Date(activity.timestamp * 1000),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </h5>\r\n                    <h4>{activity.update}</h4>\r\n                  </div>\r\n                );\r\n              })}\r\n            <button className=\"button\">\r\n              <Link to=\"/demographics\">\r\n                <Icon.Database />\r\n                <span>Demographic Overview</span>\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-right\"></div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n  // HTML Properties for each of the links in UI\r\n  const navLinkProps = (path, animationDelay) => ({\r\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\r\n    style: {\r\n      animationDelay: `${animationDelay}s`,\r\n    },\r\n  });\r\n\r\n  if (window.location.pathname !== '/summary') {\r\n    return (\r\n      <div\r\n        className=\"Navbar\"\r\n        style={{\r\n          animationDelay: '0.5s',\r\n          transition: 'all 0.3s ease-in-out',\r\n        }}\r\n      >\r\n         <div className=\"navbar-left\">\r\n              <Link to={props.pages[0].pageLink}>\r\n                <span\r\n                  {...navLinkProps(props.pages[0].pageLink, props.pages[0].animationDelayForNavbar)}\r\n                >\r\n                  {props.pages[0].displayName}\r\n                </span>\r\n              </Link>\r\n        </div>\r\n        <img\r\n          className=\"fadeInUp logo\"\r\n          alt=\"Kerala COVID-19 Tracker\"\r\n          src=\"/icon.png\"\r\n          style={{\r\n            animationDelay: '0.0s',\r\n            transition: 'all 0.3s ease-in-out',\r\n          }}\r\n        />\r\n\r\n        <div className=\"navbar-right\">\r\n              <Link to={props.pages[1].pageLink}>\r\n                <span\r\n                  {...navLinkProps(props.pages[1].pageLink, props.pages[1].animationDelayForNavbar)}\r\n                >\r\n                  {props.pages[1].displayName}\r\n                </span>\r\n              </Link>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(\n          response.data.factoids[\n            Math.floor(\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\n            )\n          ] || ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  if (window.location.pathname !== '/database') {\n    return (\n      <div\n        onClick={() => snippetChooser(0, snippets.length - 1)}\n        className=\"Banner fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Banner;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/raw_data.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"India - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"India - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    // {\n    //   pageLink: '/demographics',\n    //   view: PatientDB,\n    //   displayName: 'Demographics',\n    //   animationDelayForNavbar: 0.3,\n    // },\n    // {\n    //   pageLink: '/deepdive',\n    //   view: DeepDive,\n    //   displayName: 'Deep Dive',\n    //   animationDelayForNavbar: 0.4,\n    // },\n    // {\n    //   pageLink: '/links',\n    //   view: Links,\n    //   displayName: 'Helpful Links',\n    //   animationDelayForNavbar: 0.4,\n    // },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: 'About',\n      animationDelayForNavbar: 0.5,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />*/}\n\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a\n            href=\"https://github.com/covid19india\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            covid19india\n          </a>\n        </div>\n        <a\n          href=\"https://github.com/covid19india/covid19india-react\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n          <span>Open Sourced on GitHub</span>\n        </a>\n        <a\n          className=\"button excel\"\n          href=\"https://bit.ly/patientdb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.Database />\n          <span>Crowdsourced Patient Database&nbsp;</span>\n        </a>\n        <a\n          href=\"https://twitter.com/covid19indiaorg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n          <span>View updates on Twitter</span>\n        </a>\n        <a\n          href=\"https://bit.ly/covid19crowd\"\n          className=\"button telegram\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.MessageCircle />\n          <span>Join Telegram to Collaborate!</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}